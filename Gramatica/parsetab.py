
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CADENA CORA CORC DECIMAL DIV ENTERO ID LLAVEA LLAVEC MAS MENOS PARA PARC POR PUNTOCOMA RFLOAT RINT RPRINT RSTRINGinit               : instruccionesinstrucciones      : instrucciones instruccioninstrucciones      : instruccioninstruccion      : imprimir_instrinstruccion        : error PUNTOCOMAimprimir_instr     : RPRINT PARA expresion PARC PUNTOCOMA\n    expresion           : expresion MAS expresion\n                        | expresion MENOS expresion\n    expresion        : ENTEROexpresion        : DECIMALexpresion        : CADENA'
    
_lr_action_items = {'error':([0,2,3,4,7,8,17,],[5,5,-3,-4,-2,-5,-6,]),'RPRINT':([0,2,3,4,7,8,17,],[6,6,-3,-4,-2,-5,-6,]),'$end':([1,2,3,4,7,8,17,],[0,-1,-3,-4,-2,-5,-6,]),'PUNTOCOMA':([5,14,],[8,17,]),'PARA':([6,],[9,]),'ENTERO':([9,15,16,],[11,11,11,]),'DECIMAL':([9,15,16,],[12,12,12,]),'CADENA':([9,15,16,],[13,13,13,]),'PARC':([10,11,12,13,18,19,],[14,-9,-10,-11,-7,-8,]),'MAS':([10,11,12,13,18,19,],[15,-9,-10,-11,15,15,]),'MENOS':([10,11,12,13,18,19,],[16,-9,-10,-11,16,16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,7,]),'imprimir_instr':([0,2,],[4,4,]),'expresion':([9,15,16,],[10,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',138),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','grammar.py',142),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',150),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','grammar.py',159),
  ('instruccion -> error PUNTOCOMA','instruccion',2,'p_instruccion_error','grammar.py',163),
  ('imprimir_instr -> RPRINT PARA expresion PARC PUNTOCOMA','imprimir_instr',5,'p_imprimir','grammar.py',170),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',177),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',178),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','grammar.py',187),
  ('expresion -> DECIMAL','expresion',1,'p_primitivo_decimal','grammar.py',191),
  ('expresion -> CADENA','expresion',1,'p_primitivo_cadena','grammar.py',195),
]
